var inner_scheduler = require('node-schedule');

var scheduler = {
  initForRelay: function (relay, switchCallback) {
    if (relay.on && relay.off) {
      this._createSchedule(relay.on, function () {
        switchCallback(true);
      });

      this._createSchedule(relay.off, function () {
        switchCallback(false);
      });

      this._adjustState(relay, switchCallback);
    }
    else {
      switchCallback(false);
    }
  },

  _createSchedule: function (scheduleConfig, callback) {
    inner_scheduler.scheduleJob({
      hour: scheduleConfig[0],
      minute: scheduleConfig[1]
    }, callback);
  },

  _adjustState: function (scheduleConfig, switchCallback) {
    var now = new Date();
    var onTime = this._getScheduledTime(now, scheduleConfig.on);
    var offTime = this._getScheduledTime(now, scheduleConfig.off);

    var state = (onTime < now) && (now < offTime);

    console.log("adjusting state for " + scheduleConfig.name + " to " + state + " at " + now);

    switchCallback(state);
  },

  _getScheduledTime: function (baseDate, scheduled) {
    var time = new Date(baseDate.getTime());
    time.setHours(scheduled[0]);
    time.setMinutes(scheduled[1]);

    return time;
  }
};

module.exports = scheduler;